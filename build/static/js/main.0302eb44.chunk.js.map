{"version":3,"sources":["utils.js","components/Filter.js","components/Notification.js","components/PersonForm.js","services.js","components/Person.js","components/Persons.js","components/Title.js","App.js","index.js"],"names":["handleChange","func","event","target","value","Filter","props","searchName","setSerachName","onChange","Notification","message","error","className","PersonForm","handleSubmit","newName","setNewName","newNumber","setNewNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","persons","person","setPersons","name","number","onClick","window","confirm","Service","filter","p","Persons","map","element","length","search","Title","App","useState","setMessage","errorMessage","setErrorMessage","useEffect","preventDefault","persons_names","includes","newObjectID","indexOf","catch","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0302eb44.chunk.js","sourcesContent":["const handleChange = (func) => (event) => {\r\n  func(event.target.value)\r\n}\r\n\r\nexport { handleChange }\r\n","import { handleChange } from '../utils'\r\n\r\nconst Filter = (props) => {\r\n  const { searchName, setSerachName } = props\r\n\r\n  return (\r\n    <div>\r\n      Filter shown with: <input value={searchName} onChange={handleChange(setSerachName)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Filter}","const Notification = ({ message, error = false }) => {\r\n  if (message) {\r\n    if (error) {\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"message\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport { Notification }\r\n","import { handleChange } from '../utils'\r\n\r\nconst PersonForm = (props) => {\r\n  const { handleSubmit, newName, setNewName, newNumber, setNewNumber } = props\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleChange(setNewName)} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleChange(setNewNumber)} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { PersonForm }\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst deletee = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  delete: deletee\r\n}","import Service from '../services'\r\n\r\nconst Person = (props) => {\r\n  const { persons, person, setPersons } = props\r\n\r\n  const handle = () => {\r\n    const message = `Delete ${person.name}`\r\n    if (window.confirm(message)) {\r\n      Service.delete(person.id)\r\n      setPersons(persons.filter(p => person.id !== p.id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{person.name}</td>\r\n      <td>{person.number}</td>\r\n      <td><button onClick={handle}>Delete</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport { Person }\r\n","import { Person } from './Person'\r\n\r\nconst Persons = (props) => {\r\n  const { persons, searchName, setPersons } = props\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          {\r\n            persons.map((element) => {\r\n              if (searchName.length === 0 || element.name.search(searchName) !== -1) {\r\n                return (\r\n                  <Person key={element.name} persons={persons} person={element} setPersons={setPersons} />\r\n                )\r\n              }\r\n            }\r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Persons }","const Title = (props) => {\r\n  return (\r\n    <h2>{props.name}</h2>\r\n  )\r\n}\r\n\r\nexport { Title }\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Filter } from './components/Filter'\r\nimport { Notification } from './components/Notification'\r\nimport { PersonForm } from './components/PersonForm'\r\nimport { Persons } from './components/Persons'\r\nimport { Title } from './components/Title'\r\nimport Service from './services'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [searchName, setSerachName] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const timer = 3000\r\n\r\n  useEffect(() => {\r\n    Service.getAll().then(data => setPersons(data))\r\n  }, [])\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const persons_names = persons.map(person => person.name)\r\n    const message = `${newName} is already added to phonebook, replace the old number with a new one?`\r\n    const newObject = {\r\n      'name': newName,\r\n      'number': newNumber,\r\n    }\r\n\r\n    if (persons_names.includes(newName) && window.confirm(message)) {\r\n      const newObjectID = persons[persons_names.indexOf(newName)]['id']\r\n      Service.update(newObjectID, newObject).then(data =>\r\n        setPersons(persons.map(person => newObjectID !== person.id ? person : data))\r\n      ).catch(error => {\r\n        setErrorMessage(`Information of ${newName} has already been removed from server`)\r\n        setTimeout(() => { setErrorMessage(null) }, 5000)\r\n      })\r\n\r\n      setMessage(`Added ${newName}`)\r\n      setTimeout(() => { setMessage(null) }, timer)\r\n    } else {\r\n      Service.create(newObject).then(data => setPersons(persons.concat(newObject)))\r\n      setNewName('')\r\n\r\n      setMessage(`Added ${newName}`)\r\n      setTimeout(() => { setMessage(null) }, timer)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Title name={'Phonebook'} />\r\n      {\r\n        errorMessage &&\r\n        <Notification message={errorMessage} error={true} />\r\n      }\r\n      {\r\n        message &&\r\n        <Notification message={message} />\r\n      }\r\n      <div>\r\n        <Filter searchName={searchName} setSerachName={setSerachName} />\r\n      </div>\r\n\r\n      <div>\r\n        <Title name={'Add a new'} />\r\n        <PersonForm handleSubmit={handleSubmit}\r\n          newName={newName} setNewName={setNewName}\r\n          newNumber={newNumber} setNewNumber={setNewNumber} />\r\n      </div>\r\n\r\n      <div>\r\n        <Title name={'Numbers'} />\r\n        <Persons persons={persons} searchName={searchName} setPersons={setPersons} />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}